boxplot(df$points, ylim = c(0,10000))
y = na.omit(df[df$loyal == 1 & df$points < 3000, "value"])
y = na.omit(df[df$loyal == 1 & df$points < 3000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 2000, "value"])
y = na.omit(df[df$loyal == 1 & df$points < 2000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 1000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 10, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 1000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 3000, "value"])
y = na.omit(df[df$loyal == 1 & df$points < 3000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 3000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 6000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 2000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 500, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 900, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 950, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 910, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 900, "value"])
t.test(x = x, y = y, conf.level = 0.99)
x = na.omit(df[df$loyal == 0 & df$points > 100, "value"])
y = na.omit(df[df$loyal == 1 & df$points < 6000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6400, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 1000, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
xq2a = na.omit(df$value)
q2a = t.test(x = xq2a, mu = 4100, conf.level = 0.95)
q2a
xq2a = na.omit(df$value)
q2a = t.test(x = xq2a, mu = 4100, conf.level = 0.95)
q2a$p.value
xq2a = na.omit(df$value)
q2a = t.test(x = xq2a, mu = 4120, conf.level = 0.95)
q2a
mean(df$value)
mean(df$value, na.rm = TRUE)
xq2b = na.omit(df[df$returns > 30,"value"])
q2b = t.test(x = xq2b, mu = 45500, alternative = "less", conf.level = 0.95)
q2b
xq2a = na.omit(df$value)
t.test(x = xq2a, mu = 4120, conf.level = 0.95)
xq2b = na.omit(df[df$returns > 30,"value"])
t.test(x = xq2b, mu = 45500, alternative = "less", conf.level = 0.95)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
lm = lm(value ~ item + loyal, data = df)
lm = lm(value ~ items + loyal, data = df)
summary(lm)
View(df)
lm = lm(value ~ items + loyal + returns + deals, data = df)
View(df)
summary(lm)
lm = lm(value ~ items + loyal + returns + deals, data = df[df$channeltype == "onlineonly"])
lm = lm(value ~ items + loyal + returns + deals, data = df[df$channeltype == "onlineonly",])
summary(lm)
View(df)
table(df[df$deals == "0",])
nrow(df[df$deals == "0",])
table(df$deals)
table(df$returns)
table(df$stores)
table(df$visits)
table(df$stores, df$channeltype)
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
df <-
inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset), size = 3,
replace = FALSE), -1]
q3c_customer
q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset), size = 3,
replace = FALSE), -1]
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -1]
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -1]
q3c_customer
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1, replace = FALSE), -1:3]
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1, replace = FALSE), -c(1:3)]
q3c_customer
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -c(1:3)]
q3c_customer
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -c(1:2)]
q3c_customer
set.seed(8); q3c_customer <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -c(1:3)]
q3c_customer
set.seed(802); q3c_customers <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -c(1:3)]
q3c_customers
set.seed(802); q3c_customers <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3, replace = FALSE), -c(1:3)]
q3c_customers
set.seed(802); toplot = df[sample(1:nrow(df), size = 20000, replace = FALSE),]
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 0.15), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 20000, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 0.15), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 2000, replace = FALSE),]
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 0.15), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 10000, replace = FALSE),]
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 0.15), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 1), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 10000, replace = FALSE),]
plot(toplot$points, toplot$value, pch = 19, col = rgb(0.2, 0.45, 0.55, 0.15), xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 10000, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 2000, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 1000, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 200, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 60000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 200, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 40000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 40000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 60000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 30000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 35000),
xlab = "points", ylab = "value")
```{r, echo=FALSE}
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 35000), col = "grey",
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 35000), col = "darkgrey",
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 35000), col = "grey",
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 35000), col = "dimgray",
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 32000), col = "dimgray",
xlab = "points", ylab = "value")
head(df)
sample(df$deals)
sample(df$deals, size = 3)
sample(df$deals, size = 3)
sample(df$deals, size = 3)
sample(df$deals, size = 3)
sample(df$deals, size = 3)
sample(df$deals, size = 3)
sample(df$points, size = 3)
sample(df$items, size = 3)
sample(df, n=3)
df <-
inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -1]
df1 <-
inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df1
df1 <-
inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
inference_dataset[sample(1:nrow(inference_dataset),
+                            size = 3,
+                            replace = FALSE), -c(1:3)]
df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 3,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 10,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 10,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 10,
replace = FALSE), -c(1:3)]
df2
df2 <- inference_dataset[sample(1:nrow(inference_dataset),
size = 10,
replace = FALSE), -c(1:3)]
df2
View(df)
df1 <- inference_dataset %>% filter(value == 1500)
df1
View(df1)
df1 <- inference_dataset %>% filter(value %in% 1500:1600)
df1 <- inference_dataset %>% filter(value %in% 1500:1600)
df_predict <- df1 %>% filter(cid %in% c("458993872", "1374176", "254547"))
df_predict
df_predict <- df1 %>% filter(cid %in% c("458993872", "1374176", "77922247"))
df_predict
df_predict <- df1 %>% filter(cid %in% c("458993872", "1374176", "77922247")) %>% select(!c("X", "cid"))
df_predict
df_predict <- df1 %>% filter(cid %in% c("458993872", "1374176", "77922247")) %>% select(!c("X", "cid", "value"))
df_predict
write.csv(df_predict, file = "df_predict.csv")
df_predict <- read.csv("https://bit.ly/30tIXfp")
read.csv("https://bit.ly/30tIXfp")
mu = 175
sigma = sqrt(20)
a = pnorm(177, mean = mu, sd = sigma) - pnorm(173, mean = mu, sd = sigma)
cat(a)
cat(a^2)
(c) Assume you randomly meet 3 Swedes in the street. What is the probability that *your sample mean* is from 173cm to 177cm? (1p)
```{r}
n_c = 2
se_c = sigma/sqrt(n_c)
c = pnorm(177, mean = mu, sd = se_c) - pnorm(173, mean = mu, sd = se_c)
cat(c)
```
n_c = 2
se_c = sigma/sqrt(n_c)
c = pnorm(177, mean = mu, sd = se_c) - pnorm(173, mean = mu, sd = se_c)
cat(c)
n_d = 30
se_d = sigma/sqrt(n_d)
d = pnorm(177, mean = mu, sd = se_d) - pnorm(173, mean = mu, sd = se_d)
cat(d)
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 32000), col = "dimgray",
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 32000), col = "dimgray",
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, xlim = c(0, 30000), ylim = c(0, 32000), col = "dimgray",
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, col = "dimgray",
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, col = "dimgray",
xlim = c(0, 20000), ylim = c(0, 25000),
xlab = "points", ylab = "value")
set.seed(802); toplot = df[sample(1:nrow(df), size = 100, replace = FALSE),]
plot(toplot$points, toplot$value, col = "dimgray",
xlim = c(0, 20000), ylim = c(0, 25000),
xlab = "points", ylab = "value")
plot(toplot$points, toplot$value, col = "dimgray",
xlim = c(0, 25000), ylim = c(0, 25000),
xlab = "points", ylab = "value")
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
read.csv("https://bit.ly/30tIXfp")[-1,]
read.csv("https://bit.ly/30tIXfp")
read.csv("https://bit.ly/30tIXfp")[,-1]
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
xq2a = na.omit(df$value)
xq2a = na.omit(df$value)
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
xq2a = na.omit(df$value)
t.test(x = xq2a, mu = 4100, conf.level = 0.95)
t.test(x = xq2a, mu = 4200, conf.level = 0.95)
Questions 2 and 3 will be based on `df`.
### Question 2. Hypothesis testing
(a) Imagine you are the customer relationship manager. One of your colleagues argues that the average `value` of the customers is 4150. Based on your `df`, what do you say about this statement at 95% confidence level? (1p)
```{r}
xq2a = na.omit(df$value)
t.test(x = xq2a, mu = 4200, conf.level = 0.95)
```
t.test(x = xq2a, mu = 4150, conf.level = 0.95)
t.test(x = xq2a, mu = 4130, conf.level = 0.95)
t.test(x = xq2a, mu = 4000, conf.level = 0.95)
t.test(x = xq2a, mu = 4150, conf.level = 0.95)
xq2a = na.omit(df$value)
t.test(x = xq2a, mu = 4150, conf.level = 0.95)
xq2b = na.omit(df[df$returns > 30,"value"])
t.test(x = xq2b, mu = 45500, alternative = "less", conf.level = 0.95)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
y = na.omit(df[df$loyal == 1 & df$points < 6500, "value"])
x = na.omit(df[df$loyal == 0 & df$points > 1000, "value"])
t.test(x = x, y = y, conf.level = 0.99)
Run this code chunk to load data into your R Environment. The command will randomly select 1,000,000 rows of data from the original data set. Fill in your group number within `set.seed()`. For example, if you are group 3, make it `set.seed(3)`. From now on, you have your unique `df`. your results should be different from other groups and you should not be comparing them.
*Note*. If you make the wrong seed, your assignment will not be graded.
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
set.seed(1);
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
set.seed(1); df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
head(df)
set.seed(1)
df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
head(df)
set.seed(3)
df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
head(df)
set.seed(3); df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
head(df)
table(df$channeltype)
table(df$channeltype)[,1]
table(df$channeltype)[1,1]
dim(table(df$channeltype))
table(df$channeltype)[1]
table(df$channeltype)["multi"]
table(df$channeltype, df$loyal)
table(df$channeltype, df$loyal)["multi,"]
table(df$channeltype, df$loyal)["multi".]
table(df$channeltype, df$loyal)["multi",]
table(df$channeltype, df$loyal)["multi","0"]
table(df$channeltype, df$loyal)["offlineonly","0"]
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
q1c
q1c = prop.table(table(df$loyal, df$channeltype), margin = 2)
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
set.seed(1); df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
set.seed(1); df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
rm(inference_dataset)
q1c = prop.table(table(df$loyal, df$channeltype), margin = 2)
cat(q1c[2,2])
q1c
e1 = qnorm(0.025, mean = mu, sd = sigma)
mu = 175
sigma = sqrt(20)
q2a = pnorm(172, mean = mu, sd = sigma)
q2b = pnorm(177, mean = mu, sd = sigma, lower.tail = FALSE)
q2c = pnorm(177, mean = mu, sd = sigma) - q2a
q2d = qnorm(0.05, mean = mu, sd = sigma, lower.tail = FALSE)
e1 = qnorm(0.025, mean = mu, sd = sigma)
e2 = qnorm(0.975, mean = mu, sd = sigma)
e2 = qnorm(0.975, mean = mu, sd = sigma)
e1
e2
e1 = qnorm(0.05, mean = mu, sd = sigma)
e2 = qnorm(0.95, mean = mu, sd = sigma)
e1
e2
function(input, output) {
sliderInput("p", label = "Parameter p:", min = 0, max = 1, value = 0.5, step = 0.01)
sliderInput("n", label = "Number of observations:", min = 1, max = 1000, value = 1, step = 1)
output$plot <- outrenderPlot(hist(rbinom(input$n, 1, input$p),
main = paste("Binomial distribution with", input$n,
"observation(s).", "Sample mean =",
round(mean(rbinom(input$n, 1, input$p)), digits = 5)
), xlab = ""
))
}
a = rbinom(1000, 1, 0.5)
barplot(a)
a
?barplot
barplot(table(a)
barplot(table(a))
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
a = rbinom(1000, 1, 0.5)
barplot(table(a))
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
rm(list=ls())
inference_dataset <- read.csv("https://cda.hhs.se/inference_dataset.csv")
set.seed(1); df <- inference_dataset[sample(1:nrow(inference_dataset),
size = 1000000,
replace = FALSE), -1]
head(df)
n_c = 3
se_c = sigma/sqrt(n_c)
?t.test
a = prop.table(table(df$loyal))
a
a[1]
a[1]*2
dbinom(x = 1, size = 5, prob = a[2])
?pnorm
